
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL            &kp N1     &kp N2      &kp N3     &kp N4  &kp N5              &tog 1                                                                       &mo 3  &kp N6  &kp N7    &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB  &kp SINGLE_QUOTE  &kp COMMA  &kp PERIOD      &kp P   &kp Y               &none                                                                       &none   &kp F   &kp G     &kp C     &kp R     &kp L   &kp BSLH
   &kp ESC             &kp A      &kp O       &kp E      &kp U   &kp I               &none   &kp LGUI   &kp LALT                        &kp RGUI  &kp RCTRL      &none   &kp D   &kp H     &kp T     &kp N     &kp S   &kp FSLH
 &kp LSHFT          &kp SEMI      &kp Q       &kp J      &kp K   &kp X                                 &kp LG(C)                  &macro_vimquit                         &kp B   &kp M     &kp W     &kp V     &kp Z  &kp RSHFT
     &mo 2         &kp GRAVE   &kp CAPS    &kp LEFT  &kp RIGHT                    &kp BSPC  &kp LG(B)  &kp LG(V)                  &macro_vimsave  &kp ENTER  &kp SPACE          &kp UP  &kp DOWN  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1     &kp N2      &kp N3     &kp N4  &kp N5              &trans                                                                       &mo 3  &kp N6  &kp KP_DOT  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB    &kp SQT  &kp COMMA  &kp PERIOD      &kp P   &kp Y               &none                                                                       &none   &kp F   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A      &kp O       &kp E      &kp U   &kp I               &none   &kp LGUI   &kp LALT                        &kp LGUI  &kp SPACE      &none   &kp D   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS  &kp SLASH
 &kp LSHFT   &kp SEMI      &kp Q       &kp J      &kp K   &kp X                                 &kp LG(C)                  &macro_vimquit                         &kp B   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE   &kp CAPS    &kp LEFT  &kp RIGHT                    &kp BSPC  &kp LG(B)  &kp LG(V)                  &macro_vimsave  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN       &kp LBKT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1         &kp F2  &kp F3              &kp F4               &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans         &trans  &trans              &trans               &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans      &kp LC(A)  &trans           &kp LC(E)               &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &kp LC(LG(Q))  &trans    &kp LC(UP_ARROW)               &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans   &trans   &trans   &trans
 &trans         &tog 4  &tog 5  &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_Shortcuts {
            bindings = <
  &trans  &kp LC(LA(LEFT_ARROW))  &kp LC(LA(RIGHT_ARROW))  &kp LC(LA(E))  &kp LC(LA(T))  &kp LC(LA(I))                   &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp ESC                  &trans                   &trans         &trans  &kp LC(LA(D))  &kp LC(LA(K))                   &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans          &kp LS(LG(N3))           &kp LS(LG(N4))         &trans  &kp LC(LA(F))  &kp LC(LA(U))            &kp LS(LG(V))  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &trans                  &trans                   &trans         &trans  &kp LC(LA(G))  &kp LC(LA(J))                                   &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
  &trans                  &trans                   &trans         &trans         &trans                                  &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Game_mode {
            bindings = <
    &trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5               &trans                                                        &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans   &kp Q   &kp W   &kp E   &kp R   &kp T               &trans                                                        &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &trans   &kp A   &kp S   &kp D   &kp F   &kp G               &trans   &kp LGUI   &kp LALT                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LSHFT   &kp Z   &kp X   &kp C   &kp V   &kp B                                  &kp LCTRL                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &trans  &trans  &trans   &kp M                    &kp SPACE  &kp ENTER     &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
